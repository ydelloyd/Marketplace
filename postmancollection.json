{
  "info": {
    "name": "Job Bidding API",
    "description": "Postman collection for Job Bidding API with routes and test cases.",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Create Job",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json",
            "type": "text"
          }
        ],
        "url": {
          "raw": "http://localhost:3001/api/jobs",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "3001",
          "path": [
            "api",
            "jobs"
          ]
        },
        "body": {
          "mode": "raw",
          "raw": "{\n  \"title\": \"Graphic Designer Needed\",\n  \"description\": \"We need a skilled designer to create a logo.\",\n  \"owner\": {\n    \"name\": \"John Doe\",\n    \"contactInfo\": \"john.doe@example.com\"\n  },\n  \"expiration\": \"2024-10-03T19:14:00Z\",\n  \"requirements\": \"Must have experience in Adobe Illustrator.\"\n}"
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 201\", function () {",
              "    pm.response.to.have.status(201);",
              "});",
              "pm.test(\"Response has job ID\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('id');",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "Create Job - Bad Request",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json",
            "type": "text"
          }
        ],
        "url": {
          "raw": "http://localhost:3001/api/jobs",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "3001",
          "path": [
            "api",
            "jobs"
          ]
        },
        "body": {
          "mode": "raw",
          "raw": "{\n  \"title\": \"\", \"description\": \"Invalid job\"\n}"
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 400\", function () {",
              "    pm.response.to.have.status(400);",
              "});",
              "pm.test(\"Response contains error message\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('reason');",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "Get All Jobs",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:3001/api/jobs",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "3001",
          "path": [
            "api",
            "jobs"
          ],
          "query": [
            {
              "key": "recent",
              "value": "true"
            },
            {
              "key": "most_active",
              "value": "false"
            },
            {
              "key": "live_jobs",
              "value": "true"
            },
            {
              "key": "job_count",
              "value": "5"
            }
          ]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "pm.test(\"Response contains jobs array\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('jobs');",
              "    pm.expect(jsonData.jobs).to.be.an('array');",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "Get Job Details",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:3001/api/jobs/{{jobId}}",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "3001",
          "path": [
            "api",
            "jobs",
            "{{jobId}}"
          ]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "pm.test(\"Response contains job details\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('id');",
              "    pm.expect(jsonData).to.have.property('title');",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "Place Bid",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json",
            "type": "text"
          }
        ],
        "url": {
          "raw": "http://localhost:3001/api/jobs/{{jobId}}/bids",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "3001",
          "path": [
            "api",
            "jobs",
            "{{jobId}}",
            "bids"
          ]
        },
        "body": {
          "mode": "raw",
          "raw": "{\n  \"amount\": 150.00,\n  \"contactInfo\": \"bidder@example.com\"\n}"
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 201\", function () {",
              "    pm.response.to.have.status(201);",
              "});",
              "pm.test(\"Response contains bid id\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('id');",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "Place Bid - Bad Request",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json",
            "type": "text"
          }
        ],
        "url": {
          "raw": "http://localhost:3001/api/jobs/{{jobId}}/bids",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "3001",
          "path": [
            "api",
            "jobs",
            "{{jobId}}",
            "bids"
          ]
        },
        "body": {
          "mode": "raw",
          "raw": "{\n  \"amount\": -10,\n  \"contactInfo\": \"invalid@example.com\"\n}"
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 400\", function () {",
              "    pm.response.to.have.status(400);",
              "});",
              "pm.test(\"Response contains error message\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('reason');",
              "});"
            ]
          }
        }
      ]
    }
  ]
}
